--- Release 0.4 ---

2009-08-15 BlackLight <blacklight@autistici.org>

	* Makefile: Now you compile Neural++ with -Wall -pedantic
	-pedantic-errors -ansi. And you won't get a single error. I love writing
	pedantic, pure ISO C++ code...

	* all: Hey I can't believe it guys, I've fixed that horrible bug an
	neural output won't diverge anymore ^^
	Also removed the 'deriv' parameter, as function pointer. It was just
	useless, as once you have an activation function, you can compute its
	derivate in any points. But, of course, this makes old codes no more
	compatible with this new version.

--- Release 0.3 ---

2009-08-09 BlackLight <blacklight@autistici.org>

	* Makefile: Totally changed
	* neural++.hpp: Changed header name, added BETA0 macro
	* synapsis.cpp: Added momentum() method to compute the inertial momentum
	of a synapsis
	* all: Data type changed from float to double for everything,
	fixing neuralpp namespace, fixed indentation, fixed exception throwing,
	fixed documentation

--- Release 0.2.2 ---

2008-11-04 BlackLight <blacklight@autistici.org>

	* all: Added initXML(), XMLFromSet() and closeXML() methods to auto-
	generate training XML.

train() method can now get XML both from a file and from a simple string.

--- Release 0.2.1 ---

2008-10-22 BlackLight <blacklight@autistici.org>

	* all: Added `train()` method to NeuralNet class, that allows you to
	train a neural network using an XML containing pre-saved training
	sets (input values, expected output). See examples/adder.xml for an
	example of such XML.

--- Release 0.2 ---

2008-10-12 BlackLight <blacklight@autistici.org>

	* all: Added `save()` method to NeuralNet class, that allows you to
	save a trained  neural network to a binary file, to load anytime you
	need using NeuralNet(const char *fname) constructor.

--- Release 0.01b ---

2008-04-03 BlackLight <blacklight@autistici.org>

	* all: First beta release ^^

Copyright 2008, 2009, BlackLight
Copying and distribution of this file, with or without modification,
are permitted provided the copyright notice and this notice are
preserved.

